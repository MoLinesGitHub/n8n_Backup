={
  "createdAt": "2025-07-01T01:19:30.109Z",
  "updatedAt": "2025-07-02T22:02:51.000Z",
  "id": "QkXo4kgFXo0pQgxk",
  "name": "Memoria persistente para Claude",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "cortes-enterprise",
        "responseMode": "lastNode",
        "options": {}
      },
      "name": "Webhook (POST /claude-mcp)",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1040,
        320
      ],
      "id": "3821f030-2074-4512-826a-d394157275d5",
      "webhookId": "ead39791-649f-471f-888b-e562cc035a7f"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "filepath",
              "value": "/Users/molinesmac/Documents/ClaudeMemory/{{ $json.userId || 'defaultUser' }}.json"
            },
            {
              "name": "logpath",
              "value": "/Users/molinesmac/Documents/ClaudeMemory/logs/{{ $json.userId || 'defaultUser' }}.log"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Filepath",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -820,
        320
      ],
      "id": "6fd9aea3-13f9-4dca-b374-d3765c388d76"
    },
    {
      "parameters": {
        "filePath": "={{$json[\"filepath\"]}}"
      },
      "name": "Read Binary File",
      "type": "n8n-nodes-base.readBinaryFile",
      "typeVersion": 1,
      "position": [
        60,
        220
      ],
      "id": "979c3efe-9496-440b-a6cd-c19bb64e3ff3"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "history",
              "value": "[]"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Empty History",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -160,
        420
      ],
      "id": "dd56f877-e586-4909-952d-eea74d7b0a2f"
    },
    {
      "parameters": {
        "fileName": "={{$json[\"filepath\"]}}",
        "dataPropertyName": "={{$json[\"history\"]}}",
        "options": {
          "append": false
        }
      },
      "name": "Write Empty File",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        60,
        420
      ],
      "id": "c885ff4c-9ba2-489f-be35-6516a28e2407"
    },
    {
      "parameters": {
        "jsCode": "// Lee historial si existe\nlet history = [];\ntry {\n  if ($binary?.data?.data) {\n    history = JSON.parse(Buffer.from($binary.data.data).toString());\n  } else if ($json.history) {\n    history = JSON.parse($json.history);\n  }\n} catch (e) {}\n\nconst userMsg = {\n  role: \"user\",\n  content: $node[\"Webhook (POST /claude-mcp)\"].json[\"message\"]\n};\nhistory.push(userMsg);\n\nreturn [{ json: { history, userId: $node[\"Webhook (POST /claude-mcp)\"].json[\"userId\"], filepath: $json.filepath, logpath: $json.logpath } }];"
      },
      "name": "Append Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        280,
        320
      ],
      "id": "f58f82d7-76e2-4b74-87db-bc8606170ee9"
    },
    {
      "parameters": {
        "fileName": "={{$json[\"filepath\"]}}",
        "dataPropertyName": "={{JSON.stringify($json[\"history\"])}}",
        "options": {
          "append": false
        }
      },
      "name": "Write Binary File",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        500,
        220
      ],
      "id": "1dcad143-c255-498f-8db8-1439eeeb3937"
    },
    {
      "parameters": {
        "fileName": "={{$json[\"logpath\"]}}",
        "dataPropertyName": "={{ JSON.stringify({ fecha: new Date().toISOString(), user: $json.userId, type: 'user', msg: $node[\"Webhook (POST /claude-mcp)\"].json[\"message\"] }) + '\\n' }}",
        "options": {
          "append": true
        }
      },
      "name": "Log User Message",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        500,
        420
      ],
      "id": "dfaa4797-926d-4aa8-98a9-cad3fc981f90"
    },
    {
      "parameters": {
        "jsCode": "// Genera prompt para Claude\nconst prompt = $json.history.map(m => `${m.role}: ${m.content}`).join('\\n') + '\\nassistant:';\nreturn [{ json: { prompt, history: $json.history, userId: $json.userId, filepath: $json.filepath, logpath: $json.logpath } }];"
      },
      "name": "Build Prompt",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        220
      ],
      "id": "6d9d9e96-115e-46d9-9a52-a8e5fa623057"
    },
    {
      "parameters": {
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "anthropicApi",
        "requestMethod": "POST",
        "url": "https://thorough-talented-antelope.ngrok-free.app/webhook/cortes-enterprise",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={\n  \"prompt\": \"{{ $json.prompt }}\",\n  \"user_id\": \"{{ $json.userId }}\"\n}",
        "headerParametersJson": "Key: Content-Type\nValue: application/json\n"
      },
      "name": "Send to Claude MCP",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        940,
        220
      ],
      "id": "6714b866-92e2-49eb-8965-a0d702a910bf",
      "credentials": {
        "anthropicApi": {
          "id": "Swy90dR9YFdejzfB",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Añade respuesta de Claude al historial\nconst assistantMsg = {\n  role: \"assistant\",\n  content: $json[\"respuesta\"] || $json[\"completion\"] || $json[\"text\"] || \"(Sin respuesta)\"\n};\nconst history = $node[\"Build Prompt\"].json[\"history\"];\nhistory.push(assistantMsg);\nreturn [{ json: { history, userId: $node[\"Build Prompt\"].json[\"userId\"], filepath: $node[\"Build Prompt\"].json[\"filepath\"], logpath: $node[\"Build Prompt\"].json[\"logpath\"] } }];"
      },
      "name": "Append Assistant Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1160,
        220
      ],
      "id": "ede19b8b-072c-4cd0-b1fa-872e55548b6e"
    },
    {
      "parameters": {
        "fileName": "={{$json[\"logpath\"]}}",
        "dataPropertyName": "={{ JSON.stringify({ fecha: new Date().toISOString(), user: $json.userId, type: 'assistant', msg: $json[\"respuesta\"] || $json[\"completion\"] || $json[\"text\"] || \"(Sin respuesta)\" }) + '\\n' }}",
        "options": {
          "append": true
        }
      },
      "name": "Log Assistant Response",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        1380,
        220
      ],
      "id": "4b7add43-8d5a-4d23-a384-e0dc83e6ced7"
    },
    {
      "parameters": {
        "fileName": "={{$json[\"filepath\"]}}",
        "dataPropertyName": "={{JSON.stringify($json[\"history\"])}}",
        "options": {
          "append": false
        }
      },
      "name": "Write Binary File (final)",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        1600,
        220
      ],
      "id": "590513eb-4b10-411a-9bd1-cfe1d1b35a40"
    },
    {
      "parameters": {
        "command": "cd /Users/molinesmac/Documents/ClaudeMemory && git add . && git commit -m \"Backup auto $(date '+%Y-%m-%d %H:%M:%S')\" && git push"
      },
      "name": "Backup to GitHub",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1820,
        220
      ],
      "id": "617234de-b03b-447d-b5fa-65f34551933c"
    },
    {
      "parameters": {
        "options": {}
      },
      "name": "Return Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        2040,
        220
      ],
      "id": "98116abd-3bbd-499a-9f2b-b01180870fe6"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "cortes-enterprise-reset",
        "options": {}
      },
      "name": "Webhook Reset",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1040,
        680
      ],
      "id": "da0060ff-668c-43d6-937f-144ab80727c9",
      "webhookId": "1ce2412e-a40f-4816-a32c-6afe77008b73"
    },
    {
      "parameters": {
        "command": "rm -f /Users/molinesmac/Documents/ClaudeMemory/{{ $json.userId || 'defaultUser' }}.json && rm -f /Users/molinesmac/Documents/ClaudeMemory/logs/{{ $json.userId || 'defaultUser' }}.log"
      },
      "name": "Delete Memory + Log",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -820,
        680
      ],
      "id": "f61345d3-89d0-458d-8f8a-8f825fbccdf2"
    },
    {
      "parameters": {
        "options": {}
      },
      "name": "Reset Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -600,
        680
      ],
      "id": "0fbba9fb-3b61-4dae-923b-b0744300618e"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cd6f8065-abfe-4f78-9160-b18f52d47ef0",
              "leftValue": "={{ $json.fileExists }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -380,
        320
      ],
      "id": "f64fcc8f-f3f7-4e78-8510-277d5cef4d62",
      "name": "If File Exists"
    },
    {
      "parameters": {
        "jsCode": "const fs = require('fs');\nconst path = $json.filepath || '';\nlet exists = false;\ntry {\n  exists = fs.existsSync(path);\n} catch (e) {\n  exists = false;\n}\nreturn [{ json: { ...$json, fileExists: exists } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -600,
        320
      ],
      "id": "4a748673-e017-4955-86d5-d8a3db8be201",
      "name": "Fuction"
    }
  ],
  "connections": {
    "Webhook (POST /claude-mcp)": {
      "main": [
        [
          {
            "node": "Set Filepath",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Binary File": {
      "main": [
        [
          {
            "node": "Append Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Empty History": {
      "main": [
        [
          {
            "node": "Write Empty File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Empty File": {
      "main": [
        [
          {
            "node": "Append Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append Message": {
      "main": [
        [
          {
            "node": "Write Binary File",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log User Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Binary File": {
      "main": [
        [
          {
            "node": "Build Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build Prompt": {
      "main": [
        [
          {
            "node": "Send to Claude MCP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Claude MCP": {
      "main": [
        [
          {
            "node": "Append Assistant Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append Assistant Response": {
      "main": [
        [
          {
            "node": "Log Assistant Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Binary File (final)": {
      "main": [
        [
          {
            "node": "Backup to GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Backup to GitHub": {
      "main": [
        [
          {
            "node": "Return Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Reset": {
      "main": [
        [
          {
            "node": "Delete Memory + Log",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Memory + Log": {
      "main": [
        [
          {
            "node": "Reset Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Assistant Response": {
      "main": [
        [
          {
            "node": "Write Binary File (final)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Filepath": {
      "main": [
        [
          {
            "node": "Fuction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If File Exists": {
      "main": [
        [
          {
            "node": "Read Binary File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Empty History",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fuction": {
      "main": [
        [
          {
            "node": "If File Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "257727d5-46c8-4300-9e12-4b6df654b8fc",
  "triggerCount": 2,
  "tags": []
}