={
  "createdAt": "2025-06-28T20:25:39.117Z",
  "updatedAt": "2025-06-29T22:27:33.000Z",
  "id": "mfmcb9mvacwEIha0",
  "name": "GitHub Backups",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "id": "97b4baba-8738-4075-b449-3264e1d68a59",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -140,
        160
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "filters": {
          "activeWorkflows": true
        },
        "requestOptions": {}
      },
      "id": "16cecfe0-4b7e-42c3-927b-dac4e5f5828b",
      "name": "Retrieve workflows",
      "type": "n8n-nodes-base.n8n",
      "position": [
        520,
        160
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "X3IJqbXTdeatW2Z7",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "918997f9-e4d7-4e14-89c8-28bf592e33ec",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        300,
        160
      ],
      "typeVersion": 1,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "resource": "user",
        "owner": {
          "__rl": true,
          "value": "MoLinesGitHub",
          "mode": "name"
        },
        "returnAll": true
      },
      "id": "b78b296d-3508-4ff5-9c61-916f85c70540",
      "name": "List files from repo",
      "type": "n8n-nodes-base.github",
      "position": [
        80,
        160
      ],
      "webhookId": "354d699e-44b0-4444-9d31-af7fd4ff5561",
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "Zt3do9WlQLzPknXW",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "MoLinesGitHub",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n_Backup",
          "mode": "list",
          "cachedResultName": "n8n_Backup",
          "cachedResultUrl": "https://github.com/MoLinesGitHub/n8n_Backup"
        },
        "filePath": "={{ $json.fileName }}",
        "fileContent": "={{ $json.data }}",
        "commitMessage": "=Updated backup of workflow {{ $json.fileName }}"
      },
      "id": "3c46e6e2-40e9-4ba5-ab46-0f4f80028d44",
      "name": "Update file",
      "type": "n8n-nodes-base.github",
      "position": [
        1620,
        60
      ],
      "webhookId": "27218087-8df7-474d-a39f-70cfa9c34ec8",
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "Zt3do9WlQLzPknXW",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "MoLinesGitHub",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n_Backup",
          "mode": "list",
          "cachedResultName": "n8n_Backup",
          "cachedResultUrl": "https://github.com/MoLinesGitHub/n8n_Backup"
        },
        "filePath": "={{ $json.fileName }}",
        "fileContent": "=={{ $('To base64').item.json.data }}",
        "commitMessage": "=Created backup of workflow {{ $json.fileName }}"
      },
      "id": "28546a18-b5f0-4870-a4db-f679e440fabd",
      "name": "Upload file",
      "type": "n8n-nodes-base.github",
      "position": [
        1620,
        260
      ],
      "webhookId": "ce4b561b-acb9-4cd8-b76f-4928dada9674",
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "Zt3do9WlQLzPknXW",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $('Aggregate').item.json.name }}",
              "operation": "contains",
              "value2": "={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-"
            }
          ]
        }
      },
      "id": "200f784d-a760-4c7b-a269-b821b6037901",
      "name": "Check if file exists",
      "type": "n8n-nodes-base.if",
      "position": [
        1400,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "toJson",
        "mode": "each",
        "options": {
          "format": true
        }
      },
      "id": "c8f43435-f02c-4ba1-aeff-bbbeb92fb38b",
      "name": "Json file",
      "type": "n8n-nodes-base.convertToFile",
      "position": [
        740,
        160
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "id": "26f57417-6649-4408-ab79-0d95de3e39e3",
      "name": "To base64",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        960,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Retrieve previous file names from Github",
        "height": 380,
        "width": 440,
        "color": 5
      },
      "id": "20719adf-332d-461c-9ab3-bd10d4537813",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        20,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe4a36ef-9f04-40e3-99bd-cc517a49b440",
              "name": "commitDate",
              "type": "string",
              "value": "={{ $now.format('dd-MM-yyyy/H:mm') }}"
            },
            {
              "id": "b0fe1bcc-e79c-4a6b-b8b4-44222c8bf4e8",
              "name": "fileName",
              "type": "string",
              "value": "={{ $('Retrieve workflows').item.json.name.replace(/\\s+/g, '-').toLowerCase() }}-{{ $now.format('dd-MM-yyyy-HH-mm') }}.json"
            }
          ]
        },
        "options": {}
      },
      "id": "f9e4522e-675c-449d-b8b7-bf23528dff12",
      "name": "Commit date & file name",
      "type": "n8n-nodes-base.set",
      "position": [
        1180,
        160
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "### Retrieve and process workflows from n8n",
        "height": 380,
        "width": 620,
        "color": 3
      },
      "id": "3e2d48fd-2e23-4b96-8d73-8d7556d918dd",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        480,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Commit + edit/create files if needed",
        "height": 440,
        "width": 1160,
        "color": 4
      },
      "id": "18af2935-86d9-4b06-9728-2d494d81ec7c",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1120,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "const input = $input.first();\nconst timestamp = new Date().toISOString();\n\nreturn [\n  {\n    json: {\n      timestamp,\n      file: input.json.fileName || 'Unknown file',\n      commit: input.json.commitMessage || 'No commit message',\n      status: input.json.success !== false ? '✅ Success' : '❌ Error',\n      node: input.node.name,\n    },\n  },\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1820,
        160
      ],
      "id": "922021f8-10fc-4a46-9129-d60dfb5fcc68",
      "name": "Build Notification"
    },
    {
      "parameters": {
        "fromEmail": "artax1983@icloud.com",
        "toEmail": "admin@molinesdesigns.com",
        "subject": "Resultados de n8n_Backup.",
        "html": "=<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>n8n Backup Notification</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      background-color: #121212;\n      margin: 0;\n      padding: 0;\n      color: #f5f5f5;\n    }\n    .container {\n      max-width: 600px;\n      margin: 30px auto;\n      background-color: #1e1e1e;\n      border-radius: 8px;\n      overflow: hidden;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.7);\n    }\n    .header {\n      background-color: #000000;\n      color: #d4af37;\n      text-align: center;\n      padding: 25px;\n    }\n    .header h1 {\n      margin: 10px 0 0 0;\n      font-size: 26px;\n    }\n    .logos {\n      display: flex;\n      justify-content: center;\n      gap: 20px;\n      align-items: center;\n      margin-top: 10px;\n    }\n    .logos img {\n      height: 40px;\n    }\n    .content {\n      padding: 25px;\n      font-size: 18px;\n      line-height: 1.6;\n      color: #e0e0e0;\n    }\n    .content strong {\n      color: #d4af37;\n    }\n    .button {\n      display: inline-block;\n      background-color: #d4af37;\n      color: #000000 !important;\n      padding: 14px 24px;\n      margin-top: 30px;\n      text-decoration: none;\n      font-weight: bold;\n      border-radius: 6px;\n    }\n    .footer {\n      background-color: #000000;\n      color: #888888;\n      text-align: center;\n      padding: 15px;\n      font-size: 13px;\n    }\n    @media screen and (max-width: 600px) {\n      .container {\n        width: 100%;\n        margin: 0;\n      }\n      .content {\n        font-size: 16px;\n      }\n      .header h1 {\n        font-size: 22px;\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <div class=\"logos\">\n        <img src=\"https://cdn.worldvectorlogo.com/logos/n8n-io-icon.svg\" alt=\"n8n logo\">\n        <img src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\" alt=\"GitHub logo\">\n      </div>\n      <h1>✨ Workflow Backup Created</h1>\n    </div>\n    <div class=\"content\">\n      <p>Hello <strong>{{ $json.user || 'User' }}</strong>,</p>\n      <p>Your <strong>n8n workflow backup</strong> has been completed successfully.</p>\n      <p><strong>Details:</strong></p>\n      <ul>\n        <li><strong>Workflow Name:</strong> {{ $json.fileName }}</li>\n        <li><strong>Date:</strong> {{ $json.commitDate }}</li>\n        <li><strong>Total Workflows Processed:</strong> {{ $json.totalWorkflows || 'N/A' }}</li>\n        <li><strong>Status:</strong> Successful</li>\n      </ul>\n      <p>You can download the JSON file directly:</p>\n      <a href=\"{{ $json.downloadUrl || 'https://github.com/MoLinesGitHub/n8n_Backup' }}\" class=\"button\" target=\"_blank\">Download Workflow JSON</a>\n      <p>Or browse the repository for all backups:</p>\n      <a href=\"https://github.com/MoLinesGitHub/n8n_Backup\" class=\"button\" target=\"_blank\">View Repository</a>\n    </div>\n    <div class=\"footer\">\n      &copy; 2025 MoLinesGitHub Automation &mdash; Automated Notification\n    </div>\n  </div>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        2040,
        160
      ],
      "id": "376b5e6f-4a36-4716-aeac-120ecec7eee5",
      "name": "Send email",
      "webhookId": "da7cccc8-7c88-456e-b4fd-7fccabe27f02",
      "credentials": {
        "smtp": {
          "id": "k98ipgQlb6nmxBmh",
          "name": "SMTP account"
        }
      }
    }
  ],
  "connections": {
    "Aggregate": {
      "main": [
        [
          {
            "node": "Retrieve workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Json file": {
      "main": [
        [
          {
            "node": "To base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "To base64": {
      "main": [
        [
          {
            "node": "Commit date & file name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "List files from repo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve workflows": {
      "main": [
        [
          {
            "node": "Json file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if file exists": {
      "main": [
        [
          {
            "node": "Update file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Upload file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List files from repo": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Commit date & file name": {
      "main": [
        [
          {
            "node": "Check if file exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update file": {
      "main": [
        [
          {
            "node": "Build Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload file": {
      "main": [
        [
          {
            "node": "Build Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build Notification": {
      "main": [
        [
          {
            "node": "Send email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "Europe/Madrid",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "37640c1b-9f44-4cf1-9c71-542aca19f2b8",
  "triggerCount": 1,
  "tags": []
}